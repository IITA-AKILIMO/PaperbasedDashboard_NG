#' @param ds : output of function addCoord
Agg_plantingMonth_SP <- function(ds,country, adminName, FCYName, unit, mainDir){
ds$plm <- as.factor(ds$weekNr)
levels(ds$plm)[levels(ds$plm) %in% 1:4]   <- "January"
levels(ds$plm)[levels(ds$plm) %in% 5:8]   <- "February"
levels(ds$plm)[levels(ds$plm) %in% 9:13]  <- "March"
levels(ds$plm)[levels(ds$plm) %in% 14:17] <- "April"
levels(ds$plm)[levels(ds$plm) %in% 18:22] <- "May"
levels(ds$plm)[levels(ds$plm) %in% 23:26] <- "June"
levels(ds$plm)[levels(ds$plm) %in% 27:30] <- "July"
levels(ds$plm)[levels(ds$plm) %in% 31:35] <- "August"
levels(ds$plm)[levels(ds$plm) %in% 36:39] <- "September"
levels(ds$plm)[levels(ds$plm) %in% 40:43] <- "October"
levels(ds$plm)[levels(ds$plm) %in% 44:48] <- "November"
levels(ds$plm)[levels(ds$plm) %in% 49:53] <- "December"
CY_WLY_8 <- droplevels(ds[ds$DaysAfterPlanting %in% c(214,221,228,235,242), ])#Aug
CY_WLY_9 <- droplevels(ds[ds$DaysAfterPlanting %in% c(249,256,263,270), ])#sep
CY_WLY_10 <- droplevels(ds[ds$DaysAfterPlanting %in% c(277,284,291,298), ])#Oct
CY_WLY_11 <- droplevels(ds[ds$DaysAfterPlanting %in% c(305,312,319, 326), ])#nov
CY_WLY_12 <- droplevels(ds[ds$DaysAfterPlanting %in% c(333,340,347,354,361), ])#dec
CY_WLY_13 <- droplevels(ds[ds$DaysAfterPlanting %in% c(368,375,382,389), ])#jan
CY_WLY_14 <- droplevels(ds[ds$DaysAfterPlanting %in% c(396,403,410,417), ])#feb
CY_WLY_15 <- droplevels(ds[ds$DaysAfterPlanting %in% c(424,431,438,445,452), ])#mar
CY_wly_average <- NULL
if(unit == "ha"){
for(j in c(8:15)){
av <- unique(ddply(eval(parse(text = paste("CY_WLY_", j, sep=""))), .(plm, NAME_2, NAME_1), summarize,
meanHarvest = mean(((WLY_user + CY_user)/2))))
# meanHarvest = round(mean(((WLY_user + CY_user)/2)), digits=0)))
colnames(av) <- c("plm","NAME_2", "NAME_1", paste("Harvest_",j, sep=""))
if(j == 8){
CY_wly_average <-  av
}else{
CY_wly_average <- merge(CY_wly_average, av, by=c("plm", "NAME_2", "NAME_1"))
}
}
}else{
for(j in c(8:15)){
av <- unique(ddply(eval(parse(text = paste("CY_WLY_", j, sep=""))), .(plm, NAME_2, NAME_1), summarize,
#meanHarvest = round(mean(((WLY_acre + CY_acre)/2)), digits=0)))
meanHarvest = mean(((WLY_acre + CY_acre)/2))))
colnames(av) <- c("plm","NAME_2", "NAME_1", paste("Harvest_",j, sep=""))
if(j == 8){
CY_wly_average <-  av
}else{
CY_wly_average <- merge(CY_wly_average, av, by=c("plm", "NAME_2", "NAME_1"))
}
}
}
subDir <- paste(adminName, FCYName, unit, sep="_")
if(!dir.exists(file.path(mainDir, subDir))){
dir.create(file.path(mainDir, subDir))
setwd(paste(mainDir, subDir, sep="/"))
}else{
setwd(paste(mainDir, subDir, sep="/"))
}
for(plm in unique(CY_wly_average$plm)){
SP_plDate <- CY_wly_average[CY_wly_average$plm == plm, ]
SP_plDate <- SP_plDate[order(SP_plDate$NAME_1, SP_plDate$NAME_2),]
fname <- paste(adminName, "_SP_paperBased_ton_", plm, ".csv",sep="")
SP_plDate <- SP_plDate[order(SP_plDate$NAME_1, SP_plDate$NAME_2), ]
write.csv(SP_plDate, fname, row.names = FALSE)
}
return(CY_wly_average)
}
#' @description : reads the individual csv files and make a pdf for each.
EditMakePdf <- function(country, adminName, FCYName, unit){
setwd(paste("D:/ACAI_Wrapper/cloud_compute/SP/",country, "/", adminName, "_", FCYName, "_", unit , sep=""))
# setwd(paste("D:/ACAI_Wrapper/cloud_compute/SP/",aggs, "/",country, "/", adminName, "_", FCYName, "_", unit , sep=""))
listcsv <- list.files(getwd(),pattern = paste(adminName, "_SP_paperBased_ton_", sep=""))
for(files in c(listcsv, listcsv[1])){
csvtables <- read.csv(files)
plantMonth <- unique(csvtables$plm)
csvtables <- csvtables[, c("NAME_1", "NAME_2","Harvest_8","Harvest_9","Harvest_10", "Harvest_11",
"Harvest_12", "Harvest_13", "Harvest_14","Harvest_15","plm" )]
csvtables <- csvtables[order(csvtables$NAME_1, csvtables$NAME_2), ]
rrtz <- c("REGION", "DISTRICT")
rrng <- c("STATE", "LGA")
if(plantMonth == "January"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(9:12, 1:4)], "plantingMonth")
}else if(plantMonth == "February"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(10:12, 1:5)], "plantingMonth")
}else if(plantMonth == "March"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(11:12, 1:6)], "plantingMonth")
}else if(plantMonth == "April"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(12, 1:7)], "plantingMonth")
}else if(plantMonth == "May"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(1:8)], "plantingMonth")
}else if(plantMonth == "June"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(2:9)], "plantingMonth")
}else if(plantMonth == "July"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(3:10)], "plantingMonth")
}else if(plantMonth == "August"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(4:11)], "plantingMonth")
}else if(plantMonth == "September"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(5:12)], "plantingMonth")
}else if(plantMonth == "October"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(6:12, 1)], "plantingMonth")
}else if(plantMonth == "November"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(7:12, 1:2)], "plantingMonth")
}else if(plantMonth == "December"){
colnames(csvtables) <- c(switch(country, NG={rrng}, TZ={rrtz}), month.name[c(8:12, 1:3)], "plantingMonth")
}
csvtables <- subset(csvtables, select=-c(plantingMonth))
cols <- names(csvtables)[3:10]
require(dplyr)
csvtables <- csvtables %>% mutate_at(vars(cols), funs(round(., 1)))
if(nrow(csvtables)>0){
fileNameR <- paste(adminName, "_SP_table","_", plantMonth, ".pdf", sep="")
pdfTables(FERTtABLE = csvtables, plantMonth, region=adminName, fileNameR=fileNameR, unit)
}
}
if(unit == "ha"){
uu = "t/ha"
} else {
uu = "t/acre"
}
fileName_p <- paste(adminName,  ".pdf", sep="")
a = paste(lgaGroups = adminName)
if(country == 'NG'){
b = paste("Cassava root yield depends on planting and harvest months.
This tool contains tables with advice for planting and harvest months
for the scheduled planting use case. For every state and LGA,a table
is generated by planting month, indicated as a title of the table.
The expected root yield in ", uu ," for harvest in 8, 9, 10, 11,
12, 13, 14 and 15 months after planting are given as columns
in the tables.", sep=" ")
}else{
b = paste("Cassava root yield depends on planting and harvest months.
This tool contains tables with advice for planting and harvest months
for the scheduled planting use case. For every region and district,
a table is generated by planting month, as indicated in the title
of the table. The expected root yield in ", uu ," for harvest in
8, 9, 10, 11, 12, 13, 14 and 15 months after planting are given
as columns in the tables.", sep=" ")
}
pdf(fileName_p, paper="a4", pagecentre=FALSE, width=12,height=14)
plot(NA, xlim=c(0.2,6), ylim=c(0,6), bty='n',
xaxt='n', yaxt='n', xlab='', ylab='')
text(2,5,a, pos=4, cex=3.5)
text(0,0.5,b, pos=4, cex=1.1)
dev.off()
}
#' @describeIn : converting csv to pdf
pdfTables <- function(FERTtABLE, plantMonth, region, fileNameR, unit){
row.names(FERTtABLE) = NULL
pdf(fileNameR, width = 12, height = 12)
if(region %in% c("Oyo", "Osun", "Delta", "Benue", "Imo", "Akwa Ibom")){
pdf.options(paper = "a4")
}else{
pdf.options(paper = "a4r")
}
hj <- matrix(c(0, 0, -0.5,-0.5, -0.5, -0.5, -0.5, -0.5, -0.5, -0.5), ncol=10, nrow=nrow(FERTtABLE), byrow=TRUE)
if(region %in% c("Oyo", "Osun", "Delta", "Benue", "Imo", "Akwa Ibom")){
tt1 <- ttheme_default(core=list(fg_params=list(hjust= as.vector(hj), x=0.05, cex = 0.7)),
colhead=list(fg_params=list(hjust=0, x=0.1, cex = 0.8)),
rowhead = list(fg_params=list(cex = 0.7)))
}else{
tt1 <- ttheme_default(core=list(fg_params=list(hjust= as.vector(hj), x=0.05, cex = 0.9)),
colhead=list(fg_params=list(hjust=0, x=0.1, cex = 0.9)),
rowhead = list(fg_params=list(cex = 0.9)))
}
table <- tableGrob(FERTtABLE, rows = NULL, theme = tt1)
if(unit == "ha"){
title <- textGrob(paste("Expected yield in t/ha when you plant in ",plantMonth, " and harvest in ...", sep=""), gp = gpar(fontsize = 14))
}else{
title <- textGrob(paste("Expected yield in t/acre when you plant in ",plantMonth, " and harvest in ...", sep=""), gp = gpar(fontsize = 14))
}
padding <- unit(0.4,"line")
table <- gtable_add_rows(
table, heights = grobHeight(title) + padding, pos = 0
)
table <- gtable_add_grob(
table, list(title),
t = 1, l = 1, r = ncol(table)
)
grid.newpage()
grid.draw(table)
dev.off()
}
#' @description join he first page and all the pdfs of different months
joinPdfs <- function(country, adminName, FCYName, unit){
setwd(paste("D:/ACAI_Wrapper/cloud_compute/SP/",country, "/", adminName, "_", FCYName, "_", unit,sep=""))
# setwd(paste("D:/ACAI_Wrapper/cloud_compute/SP/",aggs, "/",country, "/", adminName, "_", FCYName, "_", unit,sep=""))
firstPage <- paste(adminName, ".pdf", sep="")
fname <- paste(adminName, "_joined_",unit,".pdf", sep="")
listcsv <- list.files(getwd(),pattern = paste(adminName, "_SP_paperBased_ton_", sep=""))
mNames <- c()
for(files in listcsv){
csvtables <- read.csv(files)
plantMonth <- unique(csvtables$plm)
mNames <- c(mNames, as.character(plantMonth))
}
AM <- month.name[month.name %in% mNames]
pdf_combine(c(firstPage , paste(paste(adminName, "SP_table", AM, sep="_"), ".pdf", sep="")), output = fname)
}
setwd("C:/Users/User/Documents/ACAI/paper based/PaperbasedDashboard -v4")
WLY_CY_FCY1_LGA <- readRDS("WLY_CY_fcy1_NG_2020_FW_everypoint.RDS")
write.csv(WLY_CY_FCY1_LGA, "sp_rds.csv")
ff <- head(WLY_CY_FCY1_LGA)
write.csv(ff, "sphead_rds.csv")
FR_GH_FCY <- readRDS("RW_CassavaPaperBased.RDS")
setwd("C:/Users/User/Documents/ACAI/paper based/PaperbasedDashboard_RW")
TownsNG <- readOGR(dsn = ".", layer = "Places_towns")
RiversNG <- readOGR(dsn = ".", layer = "Rivers")
boundaryNG <- readOGR(dsn=getwd(), layer="gadm36_NGA_1")
ngstate <- readOGR(dsn=getwd(), layer="gadm36_NGA_2")
boundaryTZ <- readOGR(dsn=getwd(), layer="gadm36_TZA_1")
tzRegion <- readOGR(dsn=getwd(), layer="gadm36_TZA_2")
boundaryRW <- readOGR(dsn=getwd(), layer="gadm36_RWA_1")
rwState <- readOGR(dsn=getwd(), layer="gadm36_RWA_2")
boundaryGH <- readOGR(dsn=getwd(), layer="gadm36_GHA_1")
ghState <- readOGR(dsn=getwd(), layer="gadm36_GHA_2")
FR_NG_FCY1 <- readRDS("FRrecom_lga_level1_NG_2020.RDS")
FR_NG_FCY2 <- readRDS("FRrecom_lga_level2_NG_2020.RDS")
FR_NG_FCY3 <- readRDS("FRrecom_lga_level3_NG_2020.RDS")
FR_NG_FCY4 <- readRDS("FRrecom_lga_level4_NG_2020.RDS")
FR_NG_FCY5 <- readRDS("FRrecom_lga_level5_NG_2020.RDS")
###########################################################################
##  TZ fertilizer recom for FCY 1:5
###########################################################################
FR_TZ_FCY1 <- readRDS("FRrecom_lga_level1_TZ_2020.RDS")
FR_TZ_FCY2 <- readRDS("FRrecom_lga_level2_TZ_2020.RDS")
FR_TZ_FCY3 <- readRDS("FRrecom_lga_level3_TZ_2020.RDS")
FR_TZ_FCY4 <- readRDS("FRrecom_lga_level4_TZ_2020.RDS")
FR_TZ_FCY5 <- readRDS("FRrecom_lga_level5_TZ_2020.RDS")
###########################################################################
## RW fertilizer recom for FCY 1:5
###########################################################################
FR_RW_FCY <- readRDS("RW_CassavaPaperBased.RDS")
FR_RW_FCY1 <- FR_RW_FCY[FR_RW_FCY$FCY == "level1", ]
FR_RW_FCY2 <- FR_RW_FCY[FR_RW_FCY$FCY == "level2", ]
FR_RW_FCY3 <- FR_RW_FCY[FR_RW_FCY$FCY == "level3", ]
FR_RW_FCY4 <- FR_RW_FCY[FR_RW_FCY$FCY == "level4", ]
FR_RW_FCY5 <- FR_RW_FCY[FR_RW_FCY$FCY == "level5", ]
###########################################################################
## GH fertilizer recom for FCY 1:5
###########################################################################
FR_GH_FCY <- readRDS("RW_CassavaPaperBased.RDS")
FR_GH_FCY
FR_GH_FCY <- readRDS("GH_FR_CassavaPaperBased.RDS")
FR_GH_FCY
head(FR_GH_FCY)
head(FR_GH_FCY)
FR_NG_FCY1 <- readRDS("FRrecom_lga_level1_NG_2020.RDS")
FR_NG_FCY2 <- readRDS("FRrecom_lga_level2_NG_2020.RDS")
FR_NG_FCY3 <- readRDS("FRrecom_lga_level3_NG_2020.RDS")
FR_NG_FCY4 <- readRDS("FRrecom_lga_level4_NG_2020.RDS")
FR_NG_FCY5 <- readRDS("FRrecom_lga_level5_NG_2020.RDS")
###########################################################################
##  TZ fertilizer recom for FCY 1:5
###########################################################################
FR_TZ_FCY1 <- readRDS("FRrecom_lga_level1_TZ_2020.RDS")
FR_TZ_FCY2 <- readRDS("FRrecom_lga_level2_TZ_2020.RDS")
FR_TZ_FCY3 <- readRDS("FRrecom_lga_level3_TZ_2020.RDS")
FR_TZ_FCY4 <- readRDS("FRrecom_lga_level4_TZ_2020.RDS")
FR_TZ_FCY5 <- readRDS("FRrecom_lga_level5_TZ_2020.RDS")
###########################################################################
## RW fertilizer recom for FCY 1:5
###########################################################################
FR_RW_FCY <- readRDS("RW_CassavaPaperBased.RDS")
FR_RW_FCY1 <- FR_RW_FCY[FR_RW_FCY$FCY == "level1", ]
FR_RW_FCY2 <- FR_RW_FCY[FR_RW_FCY$FCY == "level2", ]
FR_RW_FCY3 <- FR_RW_FCY[FR_RW_FCY$FCY == "level3", ]
FR_RW_FCY4 <- FR_RW_FCY[FR_RW_FCY$FCY == "level4", ]
FR_RW_FCY5 <- FR_RW_FCY[FR_RW_FCY$FCY == "level5", ]
FR_GH_FCY <- readRDS("GH_FR_CassavaPaperBased.RDS")
FR_GH_FCY1 <- FR_GH_FCY[FR_GH_FCY$FCY == "level1", ]
FR_GH_FCY2 <- FR_GH_FCY[FR_GH_FCY$FCY == "level2", ]
FR_GH_FCY3 <- FR_GH_FCY[FR_GH_FCY$FCY == "level3", ]
FR_GH_FCY4 <- FR_GH_FCY[FR_GH_FCY$FCY == "level4", ]
FR_GH_FCY5 <- FR_GH_FCY[FR_GH_FCY$FCY == "level5", ]
###########################################################################
##  adding planting month
###########################################################################
addplm <- function(ds, country){
ds$respY <- ds$TargetY - ds$CurrentY
ds$groRev <- ds$NR + ds$TC
ds$plm <- as.factor(ds$plw)
levels(ds$plm)[levels(ds$plm) %in% 1:4]   <- "January"
levels(ds$plm)[levels(ds$plm) %in% 5:8]   <- "February"
levels(ds$plm)[levels(ds$plm) %in% 9:13]  <- "March"
levels(ds$plm)[levels(ds$plm) %in% 14:17] <- "April"
levels(ds$plm)[levels(ds$plm) %in% 18:22] <- "May"
levels(ds$plm)[levels(ds$plm) %in% 23:26] <- "June"
levels(ds$plm)[levels(ds$plm) %in% 27:30] <- "July"
levels(ds$plm)[levels(ds$plm) %in% 31:35] <- "August"
levels(ds$plm)[levels(ds$plm) %in% 36:39] <- "September"
levels(ds$plm)[levels(ds$plm) %in% 40:43] <- "October"
levels(ds$plm)[levels(ds$plm) %in% 44:48] <- "November"
levels(ds$plm)[levels(ds$plm) %in% 49:53] <- "December"
if(country=="NG"){
ds$rateUrea <- ds$urea
ds$rateNPK151515 <- ds$NPK15_15_15
}else{
ds$rateUrea <- ds$urea
ds$rateNPK171717 <- ds$NPK17_17_17
ds$rateDAP <- ds$DAP
}
return(ds)
}
FR_NG_FCY1_plm <- addplm(ds=FR_NG_FCY1, country = "NG") ## NG if user current yield is level 1
FR_NG_FCY2_plm <- addplm(ds=FR_NG_FCY2, country = "NG") ## NG if user current yield is level 2
FR_NG_FCY3_plm <- addplm(ds=FR_NG_FCY3, country = "NG") ## NG if user current yield is level 3
FR_NG_FCY4_plm <- addplm(ds=FR_NG_FCY4, country = "NG") ## NG if user current yield is level 4
FR_NG_FCY5_plm <- addplm(ds=FR_NG_FCY5, country = "NG") ## NG if user current yield is level 5
FR_TZ_FCY1_plm <- addplm(ds=FR_TZ_FCY1, country = "TZ") ## TZ if user current yield is level 1
FR_TZ_FCY2_plm <- addplm(ds=FR_TZ_FCY2, country = "TZ") ## TZ if user current yield is level 2
FR_TZ_FCY3_plm <- addplm(ds=FR_TZ_FCY3, country = "TZ") ## TZ if user current yield is level 3
FR_TZ_FCY4_plm <- addplm(ds=FR_TZ_FCY4, country = "TZ") ## TZ if user current yield is level 4
FR_TZ_FCY5_plm <- addplm(ds=FR_TZ_FCY5, country = "TZ") ## TZ if user current yield is level 5
FR_RW_FCY1_plm <- addplm(ds=FR_RW_FCY1, country = "RW") ## RW if user current yield is level 1
FR_RW_FCY2_plm <- addplm(ds=FR_RW_FCY2, country = "RW") ## RW if user current yield is level 2
FR_RW_FCY3_plm <- addplm(ds=FR_RW_FCY3, country = "RW") ## RW if user current yield is level 3
FR_RW_FCY4_plm <- addplm(ds=FR_RW_FCY4, country = "RW") ## RW if user current yield is level 4
FR_RW_FCY5_plm <- addplm(ds=FR_RW_FCY5, country = "RW") ## RW if user current yield is level 5
FR_GH_FCY1_plm <- addplm(ds=FR_GH_FCY1, country = "GH") ## GH if user current yield is level 1
FR_GH_FCY2_plm <- addplm(ds=FR_GH_FCY2, country = "GH") ## GH if user current yield is level 2
FR_GH_FCY3_plm <- addplm(ds=FR_GH_FCY3, country = "GH") ## GH if user current yield is level 3
FR_GH_FCY4_plm <- addplm(ds=FR_GH_FCY4, country = "GH") ## GH if user current yield is level 4
FR_GH_FCY5_plm <- addplm(ds=FR_GH_FCY5, country = "GH") ## GH if user current yield is level 5
runApp()
runApp()
runApp()
runApp()
runApp()
unique(FR_GH_FCY$Regions)
require(odkr)
setwd("D:/odkChaos")
tar <- "D:/odkChaos"
pullTo <- "D:/odkChaos"
userName <- "touma"
passWord <- "Nya8u8a"
Export_To <- "D:/odkChaos/onaData"
setwd("D:/odkChaos/onaData")
# tar <- "/home/akilimo/projects/ONAdownload"
# pullTo <- "/home/akilimo/projects/ONAdownload"
# #userName <- "touma"
# #passWord <- "Nya8u8a!"
# Export_To <- "/home/akilimo/projects/ONAdownload/onaData"
## changing from  https://ona.io/iita_nrm to  https://odk.ona.io/iita_nrm on03-AUG-2020 since Ona decides to change urls without propr notifdication @Sammy B
pullOnaData <- function(){
# odkr::pull_remote
odkr::pull_remote(target = tar, briefcase = "odkBriefcase_latest",
id = ID,
to = pullTo, sd = FALSE,
from = "https://odk.ona.io/iita_nrm",
username = userName,
password = passWord)
#odkr::export_data
odkr::export_data(target = tar,overwrite = TRUE,
id = ID,
from = tar,
to = Export_To,
filename = paste(ID, ".csv", sep=""))
}
briefCaseDwnld <- function(forms, target, source=c("ONA","ODK")){
require(odkr)
for (i in forms){
fls <- list.files(path=target, pattern=paste(i,"*",sep=""))
if(length(fls)>1) file.remove(paste(target, "/", fls, sep=""))
pull_remote(id = i,
target = target,
to = target,
from = ifelse(source=="ONA", "https://ona.io/iita_nrm", "https://acai-agg.appspot.com"),
username = userName,
password = passWord)
export_data(id = i,
target = target,
from = target,
to = target,
filename = paste(i,".csv",sep=""))
}
}
###############################################################
###############################################################
# formList <- c(
#  "Add_Barcode_Labels_Season_1-2_Soil_Samples_TZ", "Add_Sample_Label", "Assign_Field", "Assign_Plants_to_Plot", "Assign_Plots_to_Trial", "Assign_Trial_to_Field",
#  "Assign_WD_to_WS", "Assign_WS", "Canopy_Dimensions", "Collect_Tagged_Tops_Cassava", "Confirm_Plot_Assignment", "Evaluate_Ridge_Conditions", "Destructive_Harvest_Data_NOT_ACAI_Nigeria_V1",
#  "Destructive_Harvest_Data_NOT_ACAI_Tanzania_V1", "Evaluate_Ridge_Conditions", "FarmerField_MaizeHarvest_IC_MLTACAI_Nigeria_V2", "Field_Description", "Field_Description_Exploratory",
#  "Get_SS_SPHS", "Get_SS_FR", "Leaf_Area_Measurement", "Leaf_Tagging", "LeafSamples_IC_ACAI_Nigeria_V1_RMT", "LeafSamples_IC_ACAI_Nigeria_V1", "MaizeHarvest_IC_MLT_ACAI_Nigeria_V1",
#  "NonDestructive_Monitoring_Cassava", "NonDestructive_Monitoring_Cassava_SecBranching", "NonDestructive_Monitoring_Maize", "NonDestructive_Monitoring_Maize_Detailed","NonDestructive_Monitoring_SweetPotato",
#  "NonDestructiveMonitoring_Cassava_IC-FMT1_ACAI_Tanzania_V1", "NonDestructiveMonitoring_Cassava_IC-RMT1_ACAI_Tanzania_V1", "NonDestructiveMonitoring_IC-MLT1_ACAI_Nigeria_V1", "NonDestructiveMonitoring_IC-RMT1_ACAI_Nigeria_V1",
#  "NonDestructiveMonitoring_IC-RMT1_ACAI_Nigeria_V2", "NonDestructiveMonitoring_NOT_ACAI_Nigeria_V3", "NonDestructiveMonitoring_NOT_ACAI_Nigeria_V4", "NonDestructiveMonitoring_NOT_ACAI_Nigeria_V5", "NonDestructiveMonitoring_NOT_ACAI_Tanzania_V3",
#  "NonDestructiveMonitoring_NOT_ACAI_Tanzania_V4", "NonDestructiveMonitoring_NOT_ACAI_Tanzania_V5", "NonDestructiveMonitoring_SP-RMT1_ACAI_Nigeria_V2","NonDestructiveMonitoring_SP-RMT1_ACAI_Nigeria_V3","NonDestructiveMonitoring_SP-RMT1_ACAI_Tanzania_V2",
#  "NonDestructiveMonitoring_SweetPotato_IC-FMT1_ACAI_Tanzania_V1", "NonDestructiveMonitoring_SweetPotato_IC-RMT1_ACAI_Tanzania_V1","Pest_and_Disease_Scoring_Cassava", "Pest_and_Disease_Scoring_SweetPotato", "Plant_Sample_Collection",
#  "Plant_Sample_DM_Recording", "Plant_Sample_Partitioning", "Plant_Stand_Cassava", "Plant_Stand_Maize", "Plant_Stand_SweetPotato", "PlotBarcodes_TimeStamps", "Pool_Samples", "RapidCharacterization_ACAI_Nigeria_V1", "RapidCharacterization_ACAI_Nigeria_V2",
#  "RapidCharacterization_ACAI_Nigeria_V4", "RapidCharacterization_ACAI_Nigeria_V5", "RapidCharacterization_ACAI_Tanzania_V1", "RapidCharacterization_ACAI_Tanzania_V2", "RapidCharacterization_ACAI_Tanzania_V3", "RapidCharacterization_ACAI_Tanzania_V4",
#  "RapidCharacterization_ACAI_Tanzania_V5", "RapidCharacterization_YieldAssessment_ACAI_Nigeria_V1", "RapidCharacterization_YieldAssessment_ACAI_Nigeria_V2", "RapidCharacterization_YieldAssessment_ACAI_Tanzania_V1", "RapidCharacterization_YieldAssessment_ACAI_Tanzania_V2",
#  "Record_Fertilizer_Prices", "Record_Weight_SS_Fractions", "Register_EA","Replace_Field_Label", "Replace_FieldBook_Label", "Replace_Plot_Label", "Replace_Sample_Label", "Replace_Trial_Label", "SiteDescription_ACAI_Nigeria_V1", "SiteDescription_ACAI_Nigeria_V2",
#  "SiteDescription_ACAI_Nigeria_V3", "SiteDescription_ACAI_Tanzania_V1", "SiteDescription_ACAI_Tanzania_V2", "SiteDescription_ACAI_Tanzania_V3", "Soil_Sample_Collection", "Starch_Content", "Survey_MaizeHarvest_IC_MLT_ACAI_Nigeria_V1", "Trial_Monitoring",
#  "Weed_Survey_Field", "Weed_Survey_HH", "Weeding_Time", "Yield_Assessment_Cassava_GreenBiomass", "Yield_Assessment_Cassava_LignifiedStems", "Yield_Assessment_Cassava_Roots", "Yield_Assessment_Maize_Cobs", "Yield_Assessment_Maize_FarmerSurvey",
#  "Yield_Assessment_SweetPotato_AbovegroundBiomass", "Yield_Assessment_SweetPotato_Tubers"
# )
# formList <- c("Register_PC","Register_EX")
formList <- c("Register_PC","Register_EX","Assign_FDTLPO")
# for ( ff in formList){
#   fileName <- paste(ff, ".csv", sep="")
#   if (file.exists(fileName)) file.remove(fileName)
#   briefCaseDwnld(forms=ff, target=tar, source="ONA")
# }
#
for(ID in formList){
fileName <- paste(ID, ".csv", sep="")
if (file.exists(fileName)) file.remove(fileName)
pullOnaData()
}
# "Assess_GreenBiomass_Yield_Cassava","Assess_LignifiedStem_Yield_Cassava","Assess_Root_Yield_Cassava",
# "Assess_Starch_Content","Assign_PA","Assign_PO","Assign_TL","Assign_FD","Replace_FB","Replace_PO",
# "Replace_TL","Replace_FD","Confirm_PO_Assign","sample_batch_composition","monitorVAL","VAL_PP",
# "VAL_FR","VAL_IC","VAL_CIS","VAL_SPHS_KW","VAL_SPHS_OG","VAL_SPHS_ON","VAL_SPHS_OY","VAL_SPHS_TZLZE",
# "VAL_SPHS_TZSZ","VAL_SPHS_TZEZ","VAL_SPHS_TZLZW","PRA_SPHS","dataVAL_FR","dataVAL_PP","dataVAL_IC",
# "dataVAL_SPHS","dataVAL_CIS","VAL_PP_Treat","Register_EA","Register_HH","Record_Canopy_Dimensions_AC",
# "Collect_PS_AC","Monitor_NonDestructive_Cassava_AC","Collect_SS_AC",'Collect_Leaf_Tags_AC',
# "Add_Sample_Label_AC","Assess_GreenBiomass_Yield_Cassava_AC","Assess_LignifiedStem_Yield_Cassava_AC",
# "Assess_Root_Yield_Cassava_AC","Assess_Starch_Content_AC","Assign_PA_AC","Assign_PO_AC","Assign_TL_AC",
# "Assign_FD_AC","Replace_FB_AC","Replace_PO_AC","Replace_TL_AC","Replace_FD_AC","Confirm_PO_Assign_AC",
# "Monitor_NonDestructive_Cassava_AC","Record_DM_PS_AC","Collect_PS_AC","Collect_SS_AC","Partition_PS_AC",
# "Pool_Samples_AC",
#####################################################
## SandMan data
# forms2 <- c("Assess_Plant_Stand_Maize_AC",
#             "Assess_Plant_Stand_Cassava_AC",
#             "Assess_Leaf_Area_AC",
#             "Score_Pest_Disease_AC",
#             "Record_Canopy_Dimensions_AC",
#             "Collect_Leaf_Tags_AC",
#             "Collect_Tagged_Tops_Cassava_AC",
#             "Describe_FD_AC",
#             "Describe_FD_Exploratory_AC",
#             "Evaluate_TL_AC",
#             "Survey_TEL_Cassava_Marketing",
#             "Survey_FD_Cassava_Cultivation",
#             "Survey_FD_Cassava_Yield",
#             "Survey_HH_General"
# )
#########################################################################
## ACAI - Webform
#########################################################################
## Best Fertilizer Blends Tool Evaluation
# ID = "evaluate_FB"
# fileName <- "evaluate_FB.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## Best Planting Practices Recommendations
# ID = "Get_PP"
# fileName <- "Get_PP.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## Best Planting Practices Tool Evaluation
# ID = "evaluate_PP"
# fileName <- "evaluate_PP.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## Optimal Intercropping Practices Tool Evaluation
# ID = "evaluate_IC"
# fileName <- "evaluate_IC.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## Sample Action Check
# ID = "sample_action_check"
# fileName <- "sample_action_check.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## Scheduled Planting and High Starch Content Tools Evaluation
# ID = "evaluate_SPHS"
# fileName <- "evaluate_SPHS.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## Site-specific Fertilizer Recommendation Tool Evaluation
# ID = "evaluate_FR"
# fileName <- "evaluate_FR.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## TEL Survey: Cassava Marketing
# ID = "Survey_TEL_Cassava_Marketing"
# fileName <- "Survey_TEL_Cassava_Marketing.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## TEL Survey: Cost of Land Preparation and Weeding
# ID = "Survey_TEL_LandPrep_Weeding_Cost"
# fileName <- "Survey_TEL_LandPrep_Weeding_Cost.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## TEL Survey: Maize Marketing
# ID = "Survey_TEL_Maize_Marketing"
# fileName <- "Survey_TEL_Maize_Marketing.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## TEL_SweetPotato_Marketing
# ID = "Survey_TEL_SweetPotato_Marketing"
# fileName <- "Survey_TEL_SweetPotato_Marketing.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
#
# ## Weather Data Entry
# ID = "WD_entry"
# fileName <- "WD_entry.csv"
# if (file.exists(fileName)) file.remove(fileName)
# pullOnaData()
FR_GH_FCY2_plm
setwd("C:/Users/User/Documents/ACAI/paper based/PaperbasedDashboard_RW")
